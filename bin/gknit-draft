#!/usr/bin/env ruby

require 'optionparser'

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: gknit-draft [options] [path]"
  opts.on("-f", "--filename FILE", "Directory and filename to create") do |opt|
    options[:file] = opt
  end
  opts.on("-t", "--template TEMPLATE", "Latex template to use") do |opt|
    options[:template] = opt
  end
  opts.on("-p", "--package PACKAGE", "R Package where the template is defined") do |opt|
    options[:package] = opt
  end
  opts.on("-g", "--gem RubyGem", "Ruby Gem where the template is defined") do |opt|
    options[:gem] = opt
  end
  opts.on("-c", "--create_dir", "If a new directory should be created") do |opt|
    options[:create_dir] = opt
  end
  opts.on("-e", "--edit EDITOR", "Editor to use to edit the file") do |opt|
    options[:editor] = opt
  end
end.parse!

#=========================================================================================
# Only one of 'package' or 'gem' can be given
#=========================================================================================

raise "You should either specify an R package or Ruby Gem where the template is defined" if
  !options[:package].nil? && !options[:gem].nil?

#=========================================================================================
# If gem given, then set it as the package name
#=========================================================================================

options[:package] = options[:gem] if !options[:gem].nil?

#=========================================================================================
#=========================================================================================

Dir.chdir(File.dirname(File.expand_path('.', __FILE__)))

options[:file] = "#{options[:file]}-#{options[:template]}"

exec "ruby --polyglot --jvm --experimental-options --single-threaded \
-I../lib -S ./gknit-draft.rb #{options[:file]} #{options[:template]} #{options[:package]} #{options[:create_dir]} #{options[:editor]}"

